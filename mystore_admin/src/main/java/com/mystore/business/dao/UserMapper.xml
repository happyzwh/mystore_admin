<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mystore.business.dao.UserMapper">
	<insert id="addUser" parameterType="user" useGeneratedKeys="true" keyProperty="id">
		insert into adm_user(
			    username,
			    account,
			    password,
			    email,
			    lastlogintime,
			    status,
			    sort,
			    flag,
			    createdate,
			    lastdate
		 )values(
		      #{userName},
		      #{account},
		      #{password},
		      #{email},
		      null,
		      '1',
		      #{sort},
		      '0',
		      now(),
		      now()
		 )
	</insert>
    <update id="updateUserById" parameterType="user">
		update adm_user
		<trim prefix="set" prefixOverrides=",">
	       <if test="userName != null">
	        	username = #{userName},
	       </if>
	       <if test="account != null">
				account = #{account},
		   </if>
		   <if test="password != null">
				password = #{password},
		   </if>
		   <if test="email != null">
				email = #{email},
		   </if>
		   <if test="lastLoginTime != null">
				lastlogintime = #{lastLoginTime},
		   </if>
		   <if test="status != null">
				status = #{status},
		   </if>
		   <if test="sort != null">
				sort = #{sort},
		   </if>
		   lastdate = now()
		</trim>	
		where id = #{id}
	</update>
	<select id="getUserById" parameterType="int" resultType="user">
		select
		    id,
		    username as 'userName',
		    account,
		    password,
		    email,
		    lastlogintime as 'lastLoginTime',
		    status,
		    sort,
		    flag,
		    createdate as 'createDate',
		    lastdate as 'lastDate'
		from adm_user 
		where id = #{value}
	</select>
	<select id="getUserByAccount" parameterType="string" resultType="user">
		select
		    id,
		    username as 'userName',
		    account,
		    password,
		    email,
		    lastlogintime as 'lastLoginTime',
		    status,
		    sort,
		    flag,
		    createdate as 'createDate',
		    lastdate as 'lastDate'
		from adm_user 
		where account = #{account} and status = '1'
	</select>
	<select id="selectByAccount" parameterType="map" resultType="user">
		select  
		    id,
		    username as 'userName',
		    account,
		    password,
		    email,
		    lastlogintime as 'lastLoginTime',
		    status,
		    sort,
		    flag,
		    createdate as 'createDate',
		    lastdate as 'lastDate'
		from adm_user 
		where account = #{account} and password = #{password} and status = '1'
	</select>
	<select id="selectUserList" parameterType="user" resultType="user">
	    select  
		    id,
		    username as 'userName',
		    account,
		    password,
		    email,
		    lastlogintime as 'lastLoginTime',
		    status,
		    sort,
		    flag,
		    createdate as 'createDate',
		    lastdate as 'lastDate'
		from adm_user
	    <include refid="queryUserCondition"/>
	    order by sort asc, username asc
	    <if test="pageIndex != null and pageSize != null">
               limit #{pageIndex},#{pageSize}
        </if> 
	</select>
	<select id="selectUserCount" parameterType="user" resultType="int">
	    select  count(*)
		from adm_user
	    <include refid="queryUserCondition"/>
	</select>
	<delete id="deleteUserById" parameterType="int">
		delete from adm_user where id = #{value}
	</delete>
	<sql id="queryUserCondition">
	    <trim prefix="WHERE" prefixOverrides="AND">
              <if test="id != null">
                  id = #{id}
              </if>  
              <if test="userName != null">
                and  username like CONCAT('%',#{userName},'%')  
              </if>
              <if test="password != null">
                and  password = #{password}
              </if> 
              <if test="account != null">
                and  account like CONCAT('%',#{account},'%')  
              </if> 
              <if test="email != null">
                and  email = #{email}
              </if>
              and  flag = '0'
              and  status = '1'                       
		</trim>
	</sql>
</mapper>