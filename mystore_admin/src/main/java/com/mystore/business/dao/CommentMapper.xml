<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mystore.business.dao.CommentMapper">
	<resultMap type="comment" id="commentMap">
		<result property="id" column="id" />
		<result property="id_pro" column="id_pro" />
		<result property="productName" column="productName" />
		<result property="id_user" column="id_user" />
		<result property="userName" column="userName" />
		<result property="score" column="score" />
		<result property="content" column="content" />
		<result property="isreply" column="isreply" />
		<result property="status" column="status" />
		<result property="createDate" column="createDate" />
		<result property="lastDate" column="lastDate" />
		<collection property="replys" select="getProCommentReplyByPid" column="id"/>
	</resultMap>
	<resultMap type="commentReply" id="commentReplyMap">
		<result property="id" column="id" />
		<result property="id_adm_user" column="id_adm_user" />
		<result property="userName" column="userName" />
		<result property="content" column="content" />
		<result property="status" column="status" />
		<result property="createDate" column="createDate" />
		<result property="lastDate" column="lastDate" />
	</resultMap>
	<select id="getProCommentReplyByPid" parameterType="int" resultMap="commentReplyMap">
	    select  id,
			    id_adm_user,
			    username as 'userName',
			    content,
			    status,
			    createdate as 'createDate',
			    lastdate as 'lastDate'
		from commentreply
	    where pid = #{value}
	</select>
	<select id="getProCommentById" parameterType="int" resultMap="commentMap">
	    	    select  c.id,
			    		c.id_pro,
			    		p.name as 'productName',
						c.id_user,
						c.username as 'userName',
						c.score,
						c.content,
						c.isreply,
						c.status,
						c.createdate as 'createDate',
						c.lastdate as 'lastDate'
				from comment c,product p
			    where c.id = #{value} and c.id_pro = p.id
	</select>
	<select id="getProCommentCount" parameterType="comment" resultType="int">
	    	    select  count(*)
				from comment c,product p
			    <include refid="queryCommentCondition"/>
	</select>
	<select id="getProCommentList" parameterType="comment" resultMap="commentMap">
	    	    select  c.id,
			    		c.id_pro,
			    		p.name as 'productName',
						c.id_user,
						c.username  as 'userName',
						c.score,
						c.content,
						c.isreply,
						c.status,
						c.createdate as 'createDate',
						c.lastdate  as 'lastDate'
				from comment c,product p
			     <include refid="queryCommentCondition"/>
			     order by c.createdate desc
			     <if test="pageIndex != null and pageSize != null">
               		limit #{pageIndex},#{pageSize}
       		     </if> 
	</select>
	<update id="updateProCommentStatus" parameterType="comment">
		update comment set status = #{status},isreply = #{isreply} where id = #{id}
	</update>
	<insert id="saveCommentReply" parameterType="commentReply" useGeneratedKeys="true" keyProperty="id">
		insert into commentreply(
		    pid,
			id_adm_user,
			username,
			content,
			status,
			createdate,
			lastdate
		 )values(
		    #{pid},
		    #{id_adm_user},
		    #{userName},
		    #{content},
		    #{status},
		    now(),
		    now()
		 )
	</insert>
	<sql id="queryCommentCondition">
	    <trim prefix="WHERE" prefixOverrides="AND">
              <if test="userName != null">
                	and  c.username like CONCAT('%',#{userName},'%')  
              </if>
              <if test="productName != null">
	        		and  p.name like CONCAT('%',#{productName},'%')  
		      </if>
		      <if test="status != null">
		        	and c.status = #{status}
		      </if>
		       <if test="isreply != null">
		        	and c.isreply = #{isreply}
		      </if>
		      and c.id_pro = p.id                      
		</trim>
	</sql>
</mapper>